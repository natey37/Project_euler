#The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:
#1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
#Let us list the factors of the first seven triangle numbers:
 #1: 1
 #3: 1,3
 #6: 1,2,3,6
#10: 1,2,5,10
#15: 1,3,5,15
#21: 1,3,7,21
#28: 1,2,4,7,14,28
#We can see that 28 is the first triangle number to have over five divisors.
#What is the value of the first triangle number to have over five hundred divisors?

require 'mathn'
#the prime factorization of 144 = 2^4 * 3^2, and the product of the exponents => (4+1)(2+1) = 15, 15 = number of factors 
def factors_count(n)
  count = 1
  n.prime_division.each do |x| 
    count *= (x[1] + 1) 
  end
    return count 
end

def highly_divisible_triangular_number(n)
  sum = 1 
  triangle_num = 1 
  while factors_count(triangle_num) <= 500 
    sum += 1 
    triangle_num += sum 
  end 
    return triangle_num
end 

highly_divisible_triangular_number(500) => 76576500
